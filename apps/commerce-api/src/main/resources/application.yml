server:
  shutdown: graceful
  tomcat:
    threads:
      max: 200 # 최대 워커 스레드 수 (default : 200)
      min-spare: 10 # 최소 유지 스레드 수 (default : 10)
    connection-timeout: 1m # 연결 타임아웃 (ms) (default : 60000ms = 1m)
    max-connections: 8192 # 최대 동시 연결 수 (default : 8192)
    accept-count: 100 # 대기 큐 크기 (default : 100)
    keep-alive-timeout: 60s # 60s
  max-http-request-header-size: 8KB

spring:
  main:
    web-application-type: servlet
  application:
    name: commerce-api
  profiles:
    active: local
  config:
    import:
      - jpa.yml
      - redis.yml
      - logging.yml
      - monitoring.yml

  cloud:
    openfeign:
      client:
        config:
          default:
            connectionTimeout: 1000
            readTimeout: 2000

# ================================
# Resilience4j 설정 추가
# ================================
resilience4j:
  circuitbreaker:
    instances:
      pgClient:
        register-health-indicator: true
        sliding-window-type: COUNT_BASED
        sliding-window-size: 10
        failure-rate-threshold: 50      # 실패율 50% 이상 OPEN
        wait-duration-in-open-state: 10s # 10초 뒤 HALF_OPEN 전환
        permitted-number-of-calls-in-half-open-state: 3
        minimum-number-of-calls: 5      # 최소 5번 호출 해야 통계 반영
        automatic-transition-from-open-to-half-open-enabled: true
  timelimiter:
    instances:
      pgClient:
        timeout-duration: 3s           # 호출이 3초 넘으면 Timeout 처리
        cancel-running-future: true
  retry:
    instances:
      pgClient:
        max-attempts: 3                # 최대 3번 재시도
        wait-duration: 500ms           # 재시도 간격 0.5초
        retry-exceptions:
          - feign.RetryableException         # 네트워크 오류 (timeout, connect fail 등)
          - feign.FeignException$InternalServerError  # 500 오류도 재시도
        ignore-exceptions:
          - feign.FeignException$BadRequest  # 400은 무조건 클라이언트 잘못 → retry 안함

pg:
  base-url: http://localhost:8082
  callback-url: http://localhost:8080/api/v1/payments/callback

springdoc:
  use-fqn: true
  swagger-ui:
    path: /swagger-ui.html

---
spring:
  config:
    activate:
      on-profile: local, test

management:
  server:
    port: 8080
  endpoints:
    web:
      base-path: /actuator
      exposure:
        include: health,metrics
  endpoint:
    health:
      show-details: always
logging:
  level:
    org.springframework.cache: TRACE
    org.springframework.data.redis.cache: TRACE

---
spring:
  config:
    activate:
      on-profile: dev

---
spring:
  config:
    activate:
      on-profile: qa

---
spring:
  config:
    activate:
      on-profile: prd

springdoc:
  api-docs:
    enabled: false